{"version":3,"sources":["components/image-gallery/ImageGallery.module.css","components/button/Button.module.css","components/searchbar/Searchbar.module.css","components/image-gallery/image-gallery-item/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/searchbar/Searchbar.js","components/image-gallery/image-gallery-item/ImageGalleryItem.js","components/image-gallery/ImageGallery.js","components/button/Button.js","components/modal/Modal.js","fetcher.js","components/App.js","index.js"],"names":["module","exports","Searchbar","handleChange","handleSubmit","searchQuery","className","css","SearchForm","onSubmit","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","value","ImageGalleryItem","images","showModal","map","elem","key","id","onClick","largeImageURL","src","webformatURL","alt","ImageGalleryItemImage","ImageGallery","Button","title","onLoadMore","onPage","onQuery","protoTypes","PropTypes","string","isRequired","number","func","Modal","onShowModal","closeModal","onHandleKeyPress","Overlay","onKeyPress","fetchImages","a","async","page","query","axios","get","data","hits","console","log","Error","App","state","isModal","largeImgUrl","loading","escFunction","event","keyCode","setState","e","target","preventDefault","currentTarget","loadMore","currentPage","currentQuery","prevState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","this","addEventListener","removeEventListener","handleKeyPress","color","height","width","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b611ab85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1xVKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__UUCg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3nP09\",\"SearchForm\":\"Searchbar_SearchForm__l0-6e\",\"SearchFormButton\":\"Searchbar_SearchFormButton__18FfJ\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2QS5Z\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3FzPn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2LMAn\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__33wdr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3zur2\",\"Modal\":\"Modal_Modal__JzWj5\"};","import React from 'react';\nimport css from './Searchbar.module.css';\nimport PropTypes from 'prop-types'\n\n\nconst Searchbar = ({ handleChange, handleSubmit, searchQuery }) => (\n  <header className={css.Searchbar}>\n    <form className={css.SearchForm} onSubmit={handleSubmit}>\n      <button type=\"submit\" className={css.SearchFormButton}>\n        <span className={css.SearchFormButtonLabel}>Search</span>\n      </button>\n\n      <input\n        className={css.SearchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        onChange={handleChange}\n        value={searchQuery}\n      />\n    </form>\n  </header>\n);\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  searchQuery: PropTypes.string,\n}","import React from 'react';\nimport css from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ images, showModal }) => (\n  <>\n    {images.map(elem => (\n\t\t\t<li \n\t\t\t\tkey={elem.id} \n\t\t\t\tclassName={css.ImageGalleryItem}\n\t\t\t\tonClick={() => (showModal(elem.largeImageURL))}\n\t\t\t>\n        <img\n          src={elem.webformatURL}\n          alt=\"\"\n          className={css.ImageGalleryItemImage}\n        />\n      </li>\n    ))}\n  </>\n);\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  showModal: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport css from './ImageGallery.module.css';\nimport ImageGalleryItem from './image-gallery-item/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, showModal }) => (\n  <ul className={css.ImageGallery}>\n    <ImageGalleryItem images={images} showModal={showModal} />\n  </ul>\n);\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  showModal: PropTypes.func.isRequired,\n}","import React from 'react';\nimport css from './Button.module.css';\nimport PropTypes from 'prop-types'\n\n\nconst Button = ({ title, onLoadMore, onPage, onQuery}) => (\n  <button className={css.Button} onClick={() => onLoadMore(onPage)} type=\"button\">\n    {title}\n  </button>\n);\n\nexport default Button;\n\nButton.protoTypes = {\n  title: PropTypes.string.isRequired,\n  onPage: PropTypes.number.isRequired,\n  onLoadMore: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport css from './Modal.module.css'\n\nconst Modal = ({onShowModal, closeModal, onHandleKeyPress}) => (\n  <div className={css.Overlay} onClick={closeModal} onKeyPress={onHandleKeyPress}>\n    <div className={css.Modal}>\n      <img src={onShowModal} alt=\"\" />\n    </div>\n  </div>\n);\n\nexport default Modal;\n","import axios from 'axios';\n\nexport const fetchImages = async (page = 1, query = 'dogs') => {\n  try {\n    const data = await axios.get(\n      `https://pixabay.com/api/?key=1138718-ffd3bfee4e990967f042bf805&q=${query}&image_type=photo&pretty=true&per_page=12&page=${page}`\n    );\n    return data.data.hits;\n  } catch (error) {\n\t\tconsole.log(error);\n\t\tthrow new Error(error);\n\t}\n};\n","import React, { Component } from 'react';\nimport './app.css';\nimport Searchbar from './searchbar/Searchbar';\nimport ImageGallery from './image-gallery/ImageGallery';\nimport Button from './button/Button';\nimport Modal from './modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport { fetchImages } from '../fetcher.js';\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    query: '',\n    isModal: false,\n    largeImgUrl: '',\n    loading: true\n  };\n\n  async componentDidMount() {\n    const data = await fetchImages();\n    this.setState({\n      images: data,\n      loading: false\n    });\n    document.addEventListener('keydown', this.escFunction);\n  }\n\n  escFunction = event => {\n    if (event.keyCode === 27) {\n      this.setState({\n        isModal: false\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.escFunction);\n  }\n\n  handleChange = e => {\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const data = await fetchImages(this.state.page, this.state.query);\n\n    this.setState({\n      images: data,\n      page: 1,\n      loading: false,\n    });\n  };\n\n  showModal = largeImgUrl => {\n    this.setState({\n      isModal: true,\n      largeImgUrl\n    });\n  };\n\n  closeModal = e => {\n    if (e.currentTarget === e.target) {\n      this.setState({\n        isModal: false\n      });\n    }\n  };\n\n  loadMore = async currentPage => {\n    currentPage++;\n\n    let currentQuery;\n    if (this.state.query) {\n      currentQuery = this.state.query;\n    } else {\n      currentQuery = 'dogs';\n    }\n\n    const data = await fetchImages(currentPage, currentQuery);\n\n    this.setState(prevState => ({\n      images: [...prevState.images, ...data],\n      page: currentPage,\n      loading: false,\n    }));\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth'\n    });\n  };\n\n  render() {\n    const { query, images, isModal, largeImgUrl, page, loading } = this.state;\n\n    return (\n      <>\n        {isModal && (\n          <Modal\n            onShowModal={largeImgUrl}\n            onHandleKeyPress={this.handleKeyPress}\n            closeModal={this.closeModal}\n          />\n        )}\n        <Searchbar\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          searchQuery={query}\n        />\n\n        {loading ? (\n          <div className=\"center\">\n            <Loader type=\"ThreeDots\" color=\"#F62459\" height={100} width={100} />\n          </div>\n        ) : (\n          <>\n            <ImageGallery images={images} showModal={this.showModal} />\n\n            <Button\n              onPage={page}\n              onLoadMore={this.loadMore}\n              title=\"Load more\"\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css'\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}